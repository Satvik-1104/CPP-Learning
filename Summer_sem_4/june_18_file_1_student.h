#ifndef JUNE_18_FILE_1_STUDENT_H
#define JUNE_18_FILE_1_STUDENT_H

#include <iostream>
#include <iomanip>
#include <string>
#include "june_18_file_1_constants.h"
using namespace std;

class Student {
    public:
        Student () = default;  // when we define a parameterised constructor,
                               // the default constructor won't be generated by
                               // the compiler. So, we need to do it
                               // Without these, we can't create an empty object.

        Student (string firstname_param, string lastname_param, int age_param, string gender_param, string department_param)
        {
            firstname = firstname_param;
            lastname = lastname_param;
            age = age_param;
            gender = gender_param;
            department = department_param;
        }
        
        // getters
        string get_firstname ()
        {
            return firstname;
        }

        string get_lastname ()
        {
            return lastname;
        }

        int get_age ()
        {
            return age;
        }

        string get_gender ()
        {
            return firstname;
        }

        string get_department ()
        {
            return department;
        }

        // setters

        void set_firstname (string new_firstname)
        {
            firstname = new_firstname;
        }

        void set_lastname (string new_lastname)
        {
            lastname = new_lastname;
        }

        void set_age (int new_age)
        {
            age = new_age;
        }

        void set_gender (string new_gender)
        {
            gender = new_gender;
        }

        void set_department (string new_department)
        {
            department = new_department;
        }

    /*
    public:                // -> As these class varaibles are public, they can be modified from outside
        string firstname;
        string lastname;
        int age;
        string gender;
        string department;
    */

    private:              // -> For these to be accessed and modified, we need getters and setters
        string firstname;
        string lastname;
        int age;
        string gender;
        string department;

};

void display_students(Student students[]){
    cout << left;
        cout << "student i: " <<
                setw(FIRSTNAME) << "FirstName" <<
                setw(LASTNAME) << "LastName" <<
                setw(AGE) << "Age" <<
                setw(GENDER) << "Gender" <<
                setw(DEPARTMENT) << "Department" << endl;
    cout << "Getting student details which are private member variables using GETTERS" << endl;
    for (size_t i{0}; i < 5; i++)
    {
        cout << "Student " << i + 1 << ": ";
        cout << left;
        cout << setw(FIRSTNAME) << students[i].get_firstname() <<
                setw(LASTNAME) << students[i].get_lastname() <<
                setw(AGE) << students[i].get_age() <<
                setw(GENDER) << students[i].get_gender() <<
                setw(DEPARTMENT) << students[i].get_department() << endl;
    }
}

#endif